generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
  recipes   Recipe[]

  @@map("users")
}

model Fridge {
  id        String   @id @default(uuid())
  location  String
  capacity  Int
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fridges")
}

model Product {
  id        String   @id @default(uuid())
  name      String
  space     Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  fridge    Fridge   @relation(fields: [fridgeId], references: [id], onDelete: Cascade)
  fridgeId  String
  // recipes   RecipeProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Recipe {
  id        String   @id @default(uuid())
  name      String
  description String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  products  RecipeProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("recipes")
}

model RecipeProduct {
  id        String   @id @default(uuid())
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId  String
  // product   Product  @relation(fields: [productId], references: [id])
  // productId String
  productName String

  // @@unique([recipeId, productId])
  @@unique([recipeId, productName])
  @@map("recipe_products")
}
